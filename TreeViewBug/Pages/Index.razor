@page "/"

<TreeView Nodes="Items"
          GetChildNodes="@(item => item.Children)"
          HasChildNodes="@(item => item.Children?.Any() == true)"
          @bind-SelectedNode="selectedNode"
          @bind-ExpandedNodes="expandedNodes">
    <NodeContent>
        <Icon Name="IconName.Folder" />
        @context?.Text
    </NodeContent>
</TreeView>

<Button Clicked="OnClick" Color="Color.Primary">Add node</Button>


<p><b>Tree top items</b></p>

@foreach (var item in Items)
{
    <p>@item.Text</p>
}

@code {

    public class Item
    {
        public string? Text { get; set; }
        public IEnumerable<Item>? Children { get; set; }
    }

    List<Item> Items = new()
    {
        new Item { Text = "Item 1" },
        new Item
        {
            Text = "Item 2",
            Children = new []
            {
                new Item { Text = "Item 2.1" },
                new Item
                {
                    Text = "Item 2.2",
                    Children = new []
                    {
                        new Item { Text = "Item 2.2.1" },
                        new Item { Text = "Item 2.2.2" },
                        new Item { Text = "Item 2.2.3" },
                        new Item { Text = "Item 2.2.4" }
                    }
                },
                new Item { Text = "Item 2.3" },
                new Item { Text = "Item 2.4" }
            }
        },
        new Item { Text = "Item 3" },
    };

    IList<Item> expandedNodes = new List<Item>();
    Item? selectedNode;

    private void OnClick()
    {
        Items.Add(
            new Item { Text = "Buggy item!" }
        );

        StateHasChanged();
    }
}
